<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6733 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.6733.xml">
<!ENTITY RFC7222 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7222.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<rfc category="std" docName="draft-bertz-dime-diamimpr-01" ipr="pre5378Trust200902">
 <front>
   <title>Recommendations for the Imrpovement of Diameter Specifications</title>

   <author fullname="Lyle Bertz" initials="L." surname="Bertz">
     <organization>Sprint</organization>
     <address>
       <postal>
         <street>6220 Sprint Parkway</street>
         <city>Overland Park</city>
         <region>KS</region>
         <code>66251</code>
         <country>United States</country>
       </postal>
       <email>lylebe551144@gmail.com</email>
     </address>
   </author>

   <date year="2017" />

   <area>Operations and Management Area</area>

   <workgroup>Diameter Maintenance and Extensions</workgroup>

   <keyword>diameter</keyword>
   <keyword>application</keyword>
   <keyword>errors</keyword>
   <abstract>
<t>
     This document reports on common Diameter specification errors and use cases 
     not directly supported Diameter formats but used in specifications. 
     Recommendations are made to reduce errors, support common use cases and 
     build specifications in such a way that programmtic verification of Diameter 
     specifications can occur.
</t>
   </abstract>
 </front>
 <middle>
   <section title="Introduction">
     <t>This document looks at common errors and uses of Diameter in order to document
     requirements and possible extensions to the Diameter CCF.  It is by no means an
     exhuastive analysis of all Diameter specifications but provides a survey of a few
     dozen RFCs and 3GPP Technical Specifications to determine what improvements can 
     be made in Diameter specifications.</t>
     <t>There are no issues with respect to over the wire communication of Diameter. 
     However, implementation time and minor issues arise when implementing specific
     Diameter applications that can be improved.  To set a benchmark for this, the 
     goal of automated checking and language generation was made.  The '.dia' format
     of a fork of the diafuzzer project [] was used. It is a simple, deterministic
     format that provides semantic cross checks of Diamete applications.</t>
     <t>With the goal of automated 'dia' format in mind a survey of RFCs and 3GPP technical 
     specifications was excecuted.  During the process several issues, errors, ommissions 
     and usage patterns were discovered.</t>
     <t>Diameter Applications Design Guidelines [rfc 7423] does an excellent job of noting
     some of the use cases but it does not describe how the CCF may represent this information.
     To do this the dia format was extended. A few use cases were also identified that were not
     covered in the Guideline specification.</t>
   </section>
     <section title="Requirements Language">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
       "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
       document are to be interpreted as described in <xref
       target="RFC2119">RFC 2119</xref>.</t>
     </section>
<section title="Survery of Existing Specifications" anchor="Survey">
  <section title="Summary of Challenges and Errors" anchor="commonerrors">
    <t>Enumeration issues have their own section below.  General issues include but are not limited to:
    	<list>
    	<t>Spelling and spacing errors.</t>
    	<t>Inconsistent Table formats over time.  Arguably this reflects the changes in Diameter but
    	these inconsistencies occur with documents release in close time frames.  There are also too 
    	many formats to claim it is a 'change over time' and not just an inconsistency issue.</t>
    	<t>Missing AVPs and AVP Code values.</t>
    	<t>Case Sensitive inconsistencies.</t>
    	<t>The wrong name for AVPs in Tables, referenced across specs, etc. but have the same AVP Code.</t>
    	<t>Claiming an AVP is defined in a spec when in fact it is referenced.</t>
    	<t>Incorrect references</t>
    	<t>Not noting an AVP is referenced at all but including it in a Group or Message.</t>
    	<t>Some AVPs mentioned in Groups and not defined anywhere.  This happened a few times in Accounting 
    	related 3GPP specifications.</t>
    	</list>
    </t>
    <t>Enumerations do not have a specific CCF. Over the wire the labels themselves are not used as the value
    is transported in integer formats. When recieved by a Client or Server the value is checked against a list of
    valid values.   The label would only appear in displayed information for errors, logging, etc.  However, 
    many of the specifications used varying case, spaces, parenthesis around numbers, tables, numbers then labels,
    labels then numbers, etc.</t>
    <t>An algorithm keying off of the expression 'is of type Enumerated' was used to figure out the text between 
    enumerations.  A function was then used to attempt to parse various patterns, generate a label that may be acceptable
    to a coding language capture the value assigned to the label.  This yielded partial success.  In some cases, especially
    billing in 3GPP, hand edits were required to fix duplicate labels and formats that were inconsistent with the rest of the 
    document's enumerations.</t>
    <t>A few cases even refrenced thier values as coming from other enums or registries assocaited with the IETF or OMA.  These
    were removed in some cases due to their size or copied from the existing enumeration if it had already been geneated.</t>
    <t>Although enumerations are now available in the intermediate 'dia' format, many of the labels will not be valid in specific
    programming languages.  More work is required regarding enumerations to accommodate these situations.</t>
  </section>
  <section title="Summary of Indirect Use Cases" anchor="indirectusecases">
    <t>Several Use Cases appeared that where the dia format was extended to capture them.</t>
    	<section title="Refinements" anchor="refinements">
    	<t>Refinement (Extension) of Commands and Groups.  This is a case where the same AVP/Command is referenced, i.e. same code or
    	vendor/code combination but the underlying members of the strucutre are different.  Two variants of this were found:
    		<list><t>The base (original definition) of the structure was refined.  In this case, the 'Refines' Statement in the header
    			may not include the application.</t>
    			<t>A refinement of a refinement.   In this case the specific refinement (AVP + App ID it was specified in) was the 
    			refinement.</t>
    		</list>
    	</t>
    	<t>This is not inherience.  In inheritence the children also inherit the attributes (AVPs) of the parent. In many cases
    	the new definition removed some of the parents AVPs or furhter limited the occurence amount of the AVPs.</t>
    	<t>Refinements can only occur if the Command/Grouped AVP is extensible, i.e. it includes *[AVP] in its definition.</t>
    	<t>   A value of 2[AVP] would not be considered extensible and its behavior is undefined.  Can someone limit the number of AVPs
    	present in a Command/Grouped AVP when that value is less then the total sum of the upper bounds of all member AVPs.  For example,
    	if a  Grouped AVP permits at most 2 occurences of AVP member "X" and 2 of AVP member "Y", how/why could/would one limit the 
    	Grouped AVP to no more than 3 AVPs? </t>
    	<t>In the dia format Refinement is captured by adding 'Refines [application id]' at the end of the header/Grouped AVP definition.</t>
    	</section>
    	<section title="Enumerations" anchor="enumissues">
    	<t>Enumeration use cases included defintions that referenced
    	<list>
    		<t>other Enumerations</t>
    		<t>registries found on the web</t>
    	</list>
    	</t>
    	<t>In the second case the Enumeration was typically removed.</t>
    	<t>In a few cases Enumerations referenced other enumerations and then, in Notes, limited the values (was a proper subset). The opposite 
    	case (a proper superset) never presented itself.</t>
    	<t>Later specifications assigned Unsigned32 as a value in what appears to be an attempt to avoid registries or provide some psuedo 
    	extensibility.  The purpose is actually unclear.</t>
    	</section>
  </section>
  <section title="Summary of Ingestion Barriers" anchor="codegenbarriers">
    <t>Errors, inconsistencies and Use Cases that could not be easily fulfilled aside.  Format differences hampered our ability to 
    quickly ingest code.  The following is a list of patters for AVP header tables:
    </t>
    <t> 
            <figure anchor="fig_1"
                  title="Table Patters">
            <artwork align="center"><![CDATA[
        Pattern 1: Parses the orignal table format for AVPs defined in an  IETF spec.

		The header for an RFC is 
                      AVP  Section           |    |     |SHLD|MUST|    |
   			Attribute Name   Code Defined Data Type |MUST| MAY | NOT|NOT |Encr|
   		
   		Pattern 2: 	Parses the orignal table format for AVPs defined in a 3GPP spec

		Attribute Name | AVP Code | Section defined | Value Type | Must | May | Should not | Must not | May Encr. |
		
		Pattern 3: Parses the orignal table format for AVPs defined for freediameter is BUT some rows define a spec boundary 
		such as the row below the header in this example
		| Attribute Name                   | Code | Section | Data        | MUST | MAY | SHLD NOT | MUST NOT | Encr |
		
		Pattern 4: Parses the orignal table format for AVPs defined in later  IETF specs.

The header for an RFC is
  |                | AVP  | Section |            |    |MUST |
  | Attribute Name | Code | Defined | Data Type  |MUST| NOT |

  An AVP can be 2-line
     Accounting-      483  9.8.7   Enumerated | M  |  V  |
     Realtime-Required                      |    |     | 
     
 Pattern 5: Parses the orignal table format for AVPs defined in some  IETF specs like RFC 7155.

The header for an RFC is 
  |                | Section |    |MUST |
  | Attribute Name | Defined |MUST| NOT |
  
  Pattern 6:  Parses the orignal table format for AVPs defined in some  IETF specs that don't define applications..

The header for an RFC is 
   |                                      | AVP  | Section |                |
   | Attribute Name                       | Code | Defined |    Data Type   |
   
   Pattern 7:     Parses the orignal table format for AVPs defined in an  IETF spec.
    
    The header for an RFC is
                     AVP  Section           |    |MUST|
    Attribute Name   Code Defined Data Type |MUST| NOT|
    
    Pattern 8:     Parses the orignal table format for AVPs defined in later  IETF specs.
    
    The header for an RFC is
    |                | AVP  | Section |            |    | MAY |MUST |
    | Attribute Name | Code | Defined | Data Type  |MUST|     | NOT |
    
    An AVP can be 2-line
    Accounting-      483  9.8.7   Enumerated | M  |  V  |
    Realtime-Required                      |    |     |
    
    
    Pattern 9:  Parses the orignal table format for AVPs defined in a 3GPP spec
    
    Attribute Name | AVP Code | Clause defined | Value Type | Must | May | Should not | Must not |
    
    
    Pattern 10:  Parses the orignal table format for AVPs defined in a 3GPP spec
    
    Attribute Name | AVP Code | Value Type | Must | May | Should not | Must not |
   			
   			]]></artwork>
            <postamble></postamble>
         </figure>
   	</t>
    <t>Even with patterns present some cleanup for "Notes..." was required to get the headers parsable.</t>
    <t>Not all specificaitons used an import table.  In fact some inter-mixed the tables used to note AVPs defined in the 
    spec and those that were referenced.  Some columns were removed to ensure that they fit within known foramts as well. In 
    other words, there are more formats in the specifications than shown here but with some manipulation they can be reduced to 
    this core set.</t>
    <t>For AVP imports a 3 column and 4 column format were common. Further they often had references that needed to be removed (an 
    ehnancement is planned to overcome this.</t>
    <t>Multiple application specific AVP tables were in a single spec and unified.  This was for research convenience but will hamper
    the gneration of small dictionaries.</t>
    <t>Command codes have a long name and three letter acronym typically in a table.  However, neither of those were used in the 
    definition. For example, it is quite common to see Re-Authorization-Request and RAR but Re-Auth-Request in the command code definition.</t>
    <t>There is no easy, programatic way to identify an application and relations to command codes or result codes.</t>
  </section>
</section>
<section title="Specification Survey" anchor="avps">
  <section title="Summary of Errors And Use Cases" anchor="err_usecase_summary">
    <section title="RFC 4004" anchor="rfc4004err">
    <t>Processing took approximately 20 minutes. Defect corrections were approximately an hour.</t>
    <t>
	    <list>
		    <t>The AVP Table is a unique format.  Line continuations of the table are not consistent.</t>
		    <t>Enumerations are backwards - # Label</t>
		    <t>Some issues were noted but not resolved in 4004.  See  https://www.ietf.org/mail-archive/web/dime/current/msg02053.html</t>
		    <t>Note that MIP-MN-FA-SPI, MIP-MN-HA-SPI and MIP-HA-to-MN-SPI are missing in the specification.  They were removed from their respective Grouped AVPs.</t>
		    <t>MIP-Nonce is in the AVP definition but MIP-nonce (lowercase 'n' for nonce) in Grouped definitions</t>
		    </list>
	</t>
    </section>
    <section title="RFC 4006 bis (draft 03)" anchor="rfc4006biserr">
    	<t>Processing took approximately 25 minutes.</t>
    	<t>
    	<list>
		    <t>The AVP table contains inconsistent continuation lines.</t>
		    <t>No import tables have been provided and had to be constructed.</t>
		    <t>Had to change the User-Equipment-Info-Type AVP to the format of 'AVP (AVP Code XXX) is of type Enumerated' to keep the pattern to one type.</t>
		    <t>Had to stub in TBD values.</t>
		    <t>Mis-spelling of IPFiltrRule in table.</t>
		    <t>Many enums referenced to registry values in the spec.</t>
		    <t>Section 8.6 removes dashes for Check Balance Result</t>
		    <t>Redirect-Address-Type Enumerations have spacing so appear as duplicates.</t>
		    <t>CC-Session-Failover was phrased as 'is type of Enumerated' instead of 'is of type Enumerated' </t>
    	</list>
    	</t>
  	</section>
  	<section title="RFC 4950" anchor="rfc4950err">
    	<t>Processing took approximately 15 minutes. No major issues were found.</t>
    </section>
    <section title="RFC 5447" anchor="rfc5447err">
    	<t>Processing took approximately 10 minutes. No major issues were found.</t>
    </section>
    <section title="RFC 5777 " anchor="rfc5777err">
    	<t>Processing took approximately 3 hours.</t>
    	<t>
    	<list>
	    	<t>A unique AVP table format.</t>
	    	<t>Had to hand enter ALL Enum formats.</t>
	    	<t>The approach we took for code enum is not correct.</t>
	    	<t>Treatment-Action listed as Grouped in AVP table</t>
	    	<t>IP-Bit-Mask-Width not present in table</t>
	    	<t>4.1.7.7 and table are inconsistent with AVP definition used in groups 'IP-Bit-Mask-Width' vs. 'IP-Mask-Bit-Mask-Width'</t>
	    	<t>Filter-Rule's use of ';' for comment is unconventional in parsing</t>
    	</list>
    	</t>
    </section>
    <section title="RFC 5778" anchor="rfc7787">
    	<t>Processing took 24 minutes.</t>
    	<t>
    	<list>
    	<t>Continuations in AVP tables are inconsistent which required hand editing.  The continuation '-' sometimes appears on the first 
    	line or not until the second which will require more complex code to deal with the situtation.</t>
    	<t>Imports of AVPs were mixed in with the table definitions specification.  This took the most time work out.</t>
    	<t>Subtype field of the MN-HA and MN-AAA authentication mobility options are not defined in spec and needed to be stitched in later</t>
    	<t>Although noted properly in text, MIP-Session-Key, MIP-Algorithm-Type, MIP-Replay-Mode was not list as being imported from an RFC in the AVP table </t>
    	</list>
    	</t>
    </section>
    <section title="Draft Diameter Load" anchor="dimeloaderr">
    	<t>Completed by hand in 10 minutes.  IANA allocations have occurred but the document has not left editors queue which means scripts would not work anyway</t>
    </section>
   	<section title="RFC 6733" anchor="rfc6733err">
    	<t>Processing took approximately 15 minutes.</t>
    	<t>
    	<list>
    	<t>Continuations were inconsistent.</t>
    	<t>The spec does not follow its own CCF.</t>
    	</list>
    	</t>
    </section>  
    <section title="RFC 7155" anchor="rfc7155err">
    	<t>Processing took several hours. The orginal RFC was used to fill in many of the gaps in the AVP tables.</t>
    	<t>
    	<list>
    	<t>AVPs only used for compatibility are in the messages but not mentioned in the document, e.g. NAS-Identifier is still present.</t>
		<t>RA-XXX to Re-Auth but Command acronyms, names and custom names are inter-mixed which is a bit confusing and makes it problematic to automate.</t>
		<t>Hand stitched the enum values which often pointed to entire registries</t>
		</list>
		</t>
    </section>
  	<section title="RFC 7683" anchor="rfc7683err">
    	<t>Processing took approximately 40 minutes.</t>
    	<t>
    	<list>
    	<t>The AVP table has a unique format.</t>
    	<t>Continuations were on the second line requiring lookahead logic.</t>
    	</list>
    	</t>
    </section>   
    <section title="RFC 7944" anchor="rfc7944err">
    	<t>Processing took approximately 10 minutes. No major issues were found.</t>
    </section> 
    <section title="3GPP TS 29.213" anchor="ts29214err">
    	<t>Processing took approximately 45 minutes.</t>
    	<t>
    	<list>
    		<t>In the AVP tables a dot is used as a separator instead of a comma.</t>
    		<t>In the Specific-Action AVP, the Label 'Void' occurs twice.  A hand modification was made.</t>
    		<t>The Service-Info-Status AVP has spaces between the names in the labels.  This was corrected.</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.229" anchor="ts29229err">
    	<t>Processing this took 2 hours; 20 minutes.</t>
    	<t>
    	<list>
    		<t>Many AVPs are listed as being DEFINED In but they are references.</t>
    		<t>It does not import RFC 4005, 7155 or 4006 despite using their AVPs.</t>
    		<t>Although resorted in Dec 2011, Wildcarded-IMPU was not added back to the AVP table 
    		Table 6.3.1: Diameter Multimedia Application AVPs</t>
    		<t>Line-Identifier also does not appear in the Table AND this AVP has Vendor Id ETSI (13019)</t>
    		<t></t>
    	</list>
    	</t>
    </section> 
    <section title="3GPP TS 29.468 " anchor="ts29468err">
    	<t>Processing took approximately 60 minutes</t>
    	<t>
    	<list>
    		<t>Another AVP Table format.</t>
    		<t>The Commands were abbreviated in a manner not seen elswhere in the document, e.g. GA-Request is only used in the command defintion.</t>
    		<t>AVP Definitions table removes dashes of the grouped AVPs.</t>
    		<t>Duplicate AVP Names with different codes for MBMS-GW-SSM-IP-Address and MBMS-GW-SSM-Ipv6-Address.</t>
    		<t>TMGI-Number in the Grouped AVP but it is defined in the table as TMGINumber.</t>
    	</list>
    	</t>
    </section>  
    <section title="3GPP TS 29.345 " anchor="ts29345err">
    	<t>Processing took approximately 70 minutes</t>
    	<t>
    	<list>
    		<t>AVP Table inter-mixes '.' and ',' separation in the flags fields. Code was finally written to overcome this.</t>
    		<t>In the AVP Table, App-Identifier was typed as 'Group' and not 'Grouped'.</t>
    		<t>In the AVP Table, 'Assitance-info' was incorrect case for 'Info'.</t>
    		<t>Section 6.3.31, WiFi-P2P-Assistance-Iinfo has an extra 'i' in it</t>
    		<t>User-Identity's, ProSe-Response-Code's and ProSe-Query-Code's origin are unclear.  They is not in a reference section but in several groups.</t>
    		<t>Discovery-Auth-Request and Match-Report-Info use inccorect case - ProSe-App-ID.</t>
    		<t>ProSe-Query-Code and ProSe-Response-Code are noted in Grouped AVPs but do not exist elsewhere in the spec.</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.344 " anchor="ts29344err">
    	<t>Processing took approximately 50 minutes</t>
    	<t>
    	<list>
    		<t>ProSe-Subscriber-Information-Request is the name for ProSe-Initial-Location-Information-Request.</t>
    		<t>Authorized-Discovery-Range was not listed as a defined AVP and has no values assigned.  Filled in as 3708 but these sections are not present in 29.230 at all</t>
    	</list>
    	</t>
    </section> 
    <section title="3GPP TS 29.343 " anchor="ts29343err">
    	<t>Processing took approximately 10 minutes</t>
    	<t>
    	<list>
    		<t>No issues.</t>
    	</list>
    	</t>
    </section> 
        <section title="3GPP TS 29.338 " anchor="ts29338err">
    	<t>Processing took approximately 55 minutes</t>
    	<t>
    	<list>
    		<t>Table 6.3.2.2/1: Command-Code values for SGd/Gdd has spaces in the command names.</t>
    		<t>Send-Routing-info-for-SM-Answer in the command definition is lowercase and can't be linke to the command table.</t>
    		<t>Not an issue but an observation.  No Load Control draft reference?</t>
    		<t>SGSN-Absent-User-Diagnostic SM has a space in it in the AVP table</t>
    		<t>SM-Delivery- Failure-Cause has spacing issue in table.</t>
    		<t>SMSMI-Correlation-ID has dash issues in its definition..</t>
    		<t>SM-Delivery-Not-Intended has values as a list with ending of ',' and period.  Similar issues for SM-RP-MTI</t>
    		<t>MME-SM-Delivery-Outcome- There is an extra &gt; at the end of the header definition</t>
    		<t>SM-Enumerated-Delivery-Failure-Cause used ',' and '.' for the list.  Also the data type 'Enumerated' was not capitalized
    		causing a miss in the system.</t>
    		<t>MSISDN import is from 29.329 and not 23.329</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.337 " anchor="ts29337err">
    	<t>Processing took approximately 20 minutes</t>
    	<t>
    	<list>
    		<t>No issues.</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.336 " anchor="ts29336err">
    	<t>Processing took approximately a billion minutes</t>
    	<t>
    	<list>
    	   <t>Spcing issues in AVP tables for Maximum Latency, Maximum Response Time</t>
    		<t> Scheduled-communication-time definition is lower case.</t>
    		<t>Periodic-Time is lowercase in the AVP Table.</t>
    		<t>Found a '/' in the Flags portion of the AVP Table.</t>
    		<t>eNodeB-ID and Extended-eNodeB-ID in this spec but 'Id' in defining spec .217</t>
    	</list>
    	</t>
    </section>  
    <section title="3GPP TS 29.329 " anchor="ts29329err">
    	<t>Processing took approximately a billion minutes</t>
    	<t>
    	<list>
    	   <t>Spacing issues in AVP User-Data-Request commmand. </t>
    	   <t>Does not specify the Supported-Features, Feature-List, Feature-List-ID, Supported-Applications, Server-Name, PUblic-Identity from another app in the AVP table.. </t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 32.299" anchor="ts32299err">
    	<t>Processing took approximately 9 hours</t>
    	<t>
    	<list>
    	   <t>Unique Table format.</t>
    	   <t>Required to remove imported AVPs and create a new table.</t>
    	   <t>UTF8stirng case incorrect in AVP table for a number of entries.</t>
    	   <t>ProSe-Direct-Communication- Transmission-Data-Container and Status- AS-Code have spaces.</t>
    	   <t>LCS-Client-ID changed to LCS-Client-Id.</t>
    	   <t> ProSe-Direct-Communication- Transmission-Data-Container</t>
    	   <t>Related- Change-Condition- Information</t>
    	   <t>Trunk-Group-ID was Trunk-Group-Id in AVP table.</t>
    	   <t>Wtrote more softawre to deal with the values flipped in enums (int first then label)</t>
    	   <t>Enums were a large issue so hand editing had to take place to clean up the values.</t>
    	   <t>'is of type of Enumerated' and 'is of type enumerated</t>
    	   <t>AoC-Service-Type had to be repaired by hand as the algorithm picked up the overloaed Change-Condition values</t>
    	   <t>MBMS-User-Service-Type</t>
    	   <t>Node-Functionality needs fixing</t>
    	   <t>Online-Charging-Flag had to be corrected</t>
    	   <t>Originator had missing elements</t>
    	   <t>Void numbers get caught in enums</t>
    	   <t>PoC-Event-Type used semicolons</t>
    	   <t>ProSe-Direst-Discovery-Mode spelling issue</t>
    	   <t>ProSe- Role-Of-UE spacing issue</t>
    	   <t>Participant-Access-Priority  uses colons in enum labels and mixed descriptions</t>
    	   <t>Changed Type-Number Unsigned32 as the registry is too difficult to code</t>
    	   <t>Submission-Timestamp not defined</t>
    	   <t>PoC-User-Role-Ids instead of PoC-User-Role-IDs</t>
    	   <t>Removed [ Monitored-HPLMN-Identifier ] as it made no sense and was not defined</t>
		   <t>[ Prose-Function-PLMN-Identifier ] removed</t>
    	   <t>[ VASP-Id ] &amp; [ VAS-Id ] removed from MMS-Information</t>
    	   <t>Service-Generic-Information removed from Service-Information  defined in OMA-DDS-Charging_Data [223].</t>
		   <t>[ 3GPP-Session-Stop-Indicator ] removed</t>
	       <t>IM-Information DCD-Information removed from Service-Information defined in OMA-DDS-Charging_Data [223]</t>
    	   <t>ePDG-Address vs EPDG-Address</t>
    	   <t>M2M-Information removed from Service-Information as it was missing</t>
    	   <t>SM-Device-Trigger-Information's Reference-Number removed since it was missing</t>
    	   <t>Incoming-Trunk-Group-ID removed</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.154" anchor="ts29154err">
    	<t>Processing took approximately 10 minutes</t>
    	<t>
    	<list>
    	   <t>Variance of a later Table format.</t>
    	   <t>Command Codes were abrreviated in such a way that they had to be changed so the software could match them up properly</t>
    	   <t>Time-window grouped AVP definition corrected to Time-Window</t>   	   
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.215" anchor="ts29215err">
    	<t>Processing took approximately 60 minutes</t>
    	<t>
    	<list>
    	   <t>S9a* reference table has a TS reference instead of 3GPP TS.</t>
    	   <t>UE-Local-IPv6-Prefix type in AVP table is all lower case.</t>
    	   <t>Note that ' is of type of Enumerated" was corrected to allow the software to catch the Subsession-Operation and DRA-Binding.</t>
    	   <t>Imports are missing.</t>
    	   <t>Change Framed-Ipv6-Prefix to Framed-IPv6-Prefix..</t>
    	   <t>Logical-Access-ID to Logical-Access-Id</t>
    	   <t>Physical-Access-ID to Physical-Access-Id</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.368 " anchor="ts29368err">
    	<t>Processing took approximately 20 minutes</t>
    	<t>
    	<list>
    		<t>TS used in imported AVP tables.</t>
    		<t>Command Codes were abrreviated in such a way that they had to be changed so the software could match them up properly</t> 
    		<t>'Feature-Supported-In-Final-Target AVP' in the AVP definitions table.</t>
    		<t>External-Id used instead of External-Identifier.</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.128 " anchor="ts29128err">
    	<t>Processing took approximately 30 minutes</t>
    	<t>
    	<list>
			<t>Result Codes were not found</t>
			<t>DRMP definitions are not handled.</t>
			<t>Non-IP-Data had type of Octetstring</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.173 " anchor="ts29173err">
    	<t>Processing took approximately 25 minutes</t>
    </section>
    <section title="3GPP TS 29.217 " anchor="ts29217err">
    	<t>Processing took approximately 43 minutes.</t>
    	<t>The Modify-UecontentRequest / Answer command definitions did not match anything in the Comman Table.</t>
	</section>
    <section title="3GPP TS 29.273 " anchor="ts29273err">
    	<t>Processing took 60 minutes.</t>
    	<t><list>
    		<t>The AN-Trusted enum wasn't picked up by the doc.</t>
			<t>Transport-Acess-Type - misspelling resulting in loss in the document.</t>
			<t>Case issue - Subscription-ID vs Subscription-Id</t>
			<t>MIP6-Feature-Vector shows as 64 bit in the document but 32 in RFC 5447.</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.272 " anchor="ts29272err">
    	<t>Processing took approximately 3 hours. Multiple issues were found but this document
    	 was used as a reference for development and not considered in processing efficiencies
    	 calculations.</t>
    	<t>
    	<list>
    		<t>Table 7.3.1/1: S6a/S6d, S7a/S7d and S13/S13' specific DiameterAVPs Alert-Reason has type of 'Enumerate'</t>
			<t>ProSe-Subscription-Data Grouped AVP has a type ID of 'xxx'</t>
			<t>Supported-Services AVP has a type of 'zzzz'</t>
			<t>'Subscriber Status' AVP needs a dash</t>
			<t>'Notification- To-UE-User' has a space.</t>
			<t>'IDR- Flags' has a space.</t>
			<t>'Monitoring Event Report' has multiple spaces.</t>
			<t>'eNodeB-ID' and 'Extended-eNodeB-ID' in this spec but 'Id' in defining spec .217</t>
			<t>Claims QoS-Capability as a defined AVP but it is part of RFC 5777</t>
			<t>Trace-Depth is an enum in 32.422 and had to be manually added.</t>
			<t>Job-Type. From the specification, 'The possible values are those defined in 3GPP TS 32.422 [23] for Job-Type.'</t>
			<t>'Report Interval' has a space.</t>
			<t>Preferred-Data-Mode was listed as a Grouped type but is Unsigned32.</t>
    	</list>
    	</t>
    </section>
    <section title="3GPP TS 29.061 " anchor="ts29061err">
    	<t>Processing took approximately 2 hours.</t>
    	<t>
    	<list>
    	<t>Enums use 'AVP code' vs. 'AVP Code'</t>
    	<t>3 tables for 4 of the apps</t>
    	<t>Enums have to be added by hand as they are not tied by application ID</t>
    	<t>Messages did not have App IDs in the CCF headers as they are extensions</t>
    	<t>MBMS-Session-Repetition-Number has M.V ('.' instead of comma)</t>
    	<t>MBMS-User-Data-Mode-Indication Enumeration uses spaces for its label values</t>
    	<t>3BPP-PDP-Type - Enum defined as RADIUS; not available to parser in Diameter</t>
    	</list>
    	</t>
    </section>	
    <section title="3GPP TS 29.212 " anchor="ts29212err">
    	<t>Processing took approximately 7 hours.</t>
    	<t>
    	<list>
    		<t>Logical-Access-ID and Physical-Access-ID have case inconsistencies with other specifications.</t>
			<t>Acronyms in the command code lines but they do not correlate to previously described acronymns in the document.</t>
			<t>Table 5c.6.1.1 is incomplete.</t>
			<t>Periods, '.', were used as separators in AVP tables, e.g.'M.V'.</t>
		    <t>Sd and St use TS-Request and TS-Answer but they are don't have application assigned codes.</t>
			<t>'Enumarated' appears in a type definition</t>
			<t>Incorrect reference of 7863 vs 7683</t>
			<t>Manual correction was required in the document.  Somehow PCC-Rule-Status dit not got the enums it needed.  
				It appears no spacing created an error.  Hopefully software can be updated to overcome this.</t>
			<t>Pre-emption Vulnerability (in the Section's first line) spacing kills the correct name identification.</t>
			<t>In many Enumerations there is an extra space between 'of type' and 'Enumerated'</t>
			<t>PCC-Rule-Status has a label of 'TEMPORARILY INACTIVE'</t>
			<t>Bearer-Control-Mode 'is of type of Enumerated' issue</t>
			<t>Network-Request-Support Label spaces</t>
			<t>For the Default-Access AVP - 'The values defined in the Default-Access AVP are the same as the ones defined in IP-CAN-Type AVP.'</t>
			<t>Also, mentions '3GPP-EPS IP-CAN' as an option but it is not an option in the referenced type.</t>
			<t>CS-Service-QoS-Request-Operation 'is type of Enumerated, </t>
			<t>CS-Service-Resource-Failure-Cause AVP (AVP code2814) has a spacing issue </t>
			<t>'Logical-Access-ID to 'Logical-Access-Id'</t>
			<t>CS-Service-QoS-Requset-Identifier is in table as CS-Service-Qos-Requset-Identifier</t>
			<t>Some enumerations with duplicate labels, e.g. Specific-Action</t>
    	</list>
    	</t>
    </section>
  </section>
</section>
<section title="Recommendations for Specification Improvement and Automation" anchor="improvements">
  <section title="Error Reduction" anchor="errorreductions">
    <t>The overall recommendations are as follows:</t>
    <t>
    <list>
    	<t>The name of all AVPs, Commands and Grouped AVPs appear consistently throughout the document.</t>
    	<t>The letter case MUST be consistent for all names.</t>
    	<t>No spaces shoudl appear in the names.</t>
    	<t>Use of underscores is discouraged except for line continuations in tables.</t>
    </list>
    </t>
	   <section title="Defined AVPs" anchor="avp_errorreductions">
	    <t>This section addresses AVPs defined in the specification. 
	    The following recommendations are made:</t>
	    <t><list>
	    	<t>Tables MUST include the following columns:
	    		<list>
	    			<t>Attribute Name</t>
	    			<t>AVP Code</t>
	    			<t>Section Defined</t>
	    			<t>Data Type</t>
	    			<t>AVP Flag Rules for MUST and MUST NOT</t>
	    		</list>
	    	</t>
	    	<t>Tables MAY include Notes and other notations in the column headers but
	    	MUST NOT exceed more than 8 lines of text to describe the header.</t>
	    	<t>The columns may be separated by space, '|' or both when in text format
				that follows one of the following style.
				<list>
					<t>All columns except AVP Flags are separated by whitespace.  Flag
					column boundaries are pipe delimited.</t>
					<t>Pipe delimited columns with the exception of the first column.</t>
				</list>
			</t>
			<t>AVP Names MUST NOT have spaces or underscores.</t>
			<t>Use '.' or ',' as Flag separators.  Although no space is also acceptable.</t>
			<t>Use of two lines for an AVP is permitted. The following conditions apply. 
				<list>
					<t>A hyphen or underscore MUST be used at the end of the first line 
					or at the beginning of the second (not both).</t>  
					<t>An underscore is not a part of the AVP name</t>
					<t>All other columns except the Name MUST appear on the same line.</t>
				</list>
			</t>
			<t>All Defined AVP Tables in the specification MUST use the same header format.</t>
			<t>Imported or Re-used AVPs MUST NOT be present in defined AVP tables.</t>
	   </list></t>
	   <t>
	   <figure anchor="fig_2" title="Accepted Table Patterns">
            <artwork align="center"><![CDATA[
   Example One
   
                   AVP  Section             |    |MUST |
   Attribute Name  Code Defined  Data Type  |MUST| NOT |
   -----------------------------------------|----+-----|
   AVP-Name          85  9.8.2   Unsigned32 | M  |  V  |
   
   Example Two
   
                  | AVP  | Section |            |    |MUST |
   Attribute Name | Code | Defined | Data Type  |MUST| NOT |
   ---------------|------+---------+------------+----+-----|
   AVP-Name       |  85  | 9.8.2   | Unsigned32 | M  |  V  |            			
   			]]></artwork>
            <postamble></postamble>
         </figure>
   	   </t>    
   	   <t>An open question exists when multiple AVPs tables are present and associated with 
   	   a specific application within the specification. How the application can be assoicated
   	   to the table is an open question.</t>
	   </section>  
	   <section title="Imported AVPs" anchor="imported_errorreductions">
	    <t>Imported or Re-used AVPs MUST be included in the specification.  A table
	    MUST be present if AVPs are re-used.</t>
	    <t>The table MUST include the AVP, Source document columns.</t>
	    <t>The table MAY include a Commennt column.</t>
	    <t>An M-bit column MAY be present as required.</t>
	    <t>The table MUST be pipe delimited.</t>
	   </section>  
	   <section title="Grouped AVPs" anchor="gavp_errorreductions">
	    <t>When a Grouped AVP is refined a Refine keyword is appended to the end
	    of the header.  It MUST include an application identifier of the Grouped AVP 
		it refines if that application was not the original specification or 'version'
		of the Gropued AVP.   When the Grouped AVP refines the original definition of the
		Gropued AVP it SHOULD include its application identifier.</t>
	    <t>The refined Grouped AVP MUST be included in the AVP Import table.</t>
	    <t>Open question, should the vendor and application identifiers of the application 
	    that created be in the Grouped AVP header?</t>
	    <t>When refining a Grouped AVP the following conditions apply:</t>
	    <t>
	    <list>
	    	<t>The original AVP MUST be extensible, i.e. it MUST have the [AVP] member.</t>
	    	<t>Any refinement of an AVP present in the refined Group MUST adhere to the 
	    	restrictions, if any, that were defined by inherited Groups.  For example,
	    	if a Grouped AVP refines an attribute 'Foo' to the range X*Y and 'Foo'x is 
	    	defined in the orignal AVP with a range of A*B then X &gt;= A and Y &lt;= B.</t>
	    	<t>AVPs retained without further restriction of the number of occurences MUST
	    	be kept in the Refining AVP's definition otherwise they are assumed to be
	    	dropped from the new AVP definition.  Otherwise, it is impossible to determine
	    	the Author's intent.</t>
	    </list>
	    </t>
	    <t>Open question, can a Grouped AVP have a range limited [AVP] member, e.g. 
	    *5[AVP]?</t>
	    <t>Figure <xref target="fig_3"/> shows an example refinement.  In it all but
	    the User-Name AVP are dropped in the new definition.</t>
	    <t>
	    <figure anchor="fig_3" title="Refined AVP from TS 29.128 and TS 29.336">
            <artwork align="center"><![CDATA[
From TS 29.336
User-Identifier ::= <AVP-Header: 3102, 10415>
  [User-Name]
  [MSISDN]
  [External-Identifier]
  [LMSI]
  *[AVP]          
            
From TS 29.128
User-Identifier ::= <AVP-Header: 3102, 10415, Refines>
  [User-Name]
  *[AVP]
               	]]></artwork>
            <postamble></postamble>
         </figure>
   	   </t> 
	   </section>  
	   <section title="Command Errors" anchor="commanmd_errorreductions">
	    <t>The largest issue with Commands is the inconsistent values between the 
	    name, three letter acronym defined in the table and the actual name used 
	    in the command defintition.  Maintaining consistency will resolve this issue.</t>
	    <t>Like Grouped AVP refinement, a Refine keyword is appended to the end
	    of the header.  It MUST include an application identifier of the Command 
		it refines if that application was not the original specification or 'version'
		of the Command.   When the Command refines the original definition of the
		Command it SHOULD include its application identifier.</t>
		<t>When refining a Command the following conditions apply:</t>
	    <t><list>
	    	<t>The original Command MUST be extensible, i.e. it MUST have the [AVP] member.</t>
	    	<t>Any refinement of an AVP present in the refined Command MUST adhere to the 
	    	restrictions, if any, that were defined by inherited Commands.  For example,
	    	if a Command refines an attribute 'Foo' to the range X*Y and 'Foo' is 
	    	defined in the orignal Command with a range of A*B then X &gt;= A and Y &lt;= B.</t>
	    	<t>Commands retained without further restriction of the number of occurences MUST
	    	be kept in the Refining Command's definition otherwise they are assumed to be
	    	dropped from the new Commands definition.  Otherwise, it is impossible to determine
	    	the Author's intent.</t>
	    </list></t>
	   </section> 
	   <section title="Enumeration Errors" anchor="enum_errorreductions">
	    <t>Enumeration Value Names MUST adhere to alphanumeric and underscore characters.</t>
	    <t>Enumeration Value Names MUST not begin with an underscore.</t>
	    <t>When being definned the format must include the label and the value assigned
	    with the label enclosed in parenthesis on a single.  This will confusion where
	    the label values end in integers and are close to the numeric value.  For example,
	    'speed_10 10' is okay, 'speed_1010' is a error.  This can be avoided by requiring
	    the enclosure of the values in parenthesis, e.g. 'speed_10 (10)' and 'speed_10(10)'.
	   	The last example may not be as readable as desired but it can be understood. 
	    </t>
	   </section>   
  </section>
  <section title="Formats for automated validation" anchor="codegen">
    <t>This section discusses ways by which further clarity can be defined in a specification
    and automated validation can occur for a diameter application.</t>
    <t>Following the recommendations in the previous section will reduce errors but there are
    still many pieces of information that cannot be programmatically validated.  This includes 
    the following:</t>
 	<t><list>
 		<t>GAP 1: The application identifier and name of an application.</t>
 		<t>GAP 2: The application and vendor identifiers associated with a defined AVP table.</t>
 		<t>GAP 3: The application and vendor identifiers associated with Commands.</t>
 		<t>GAP 4: Reused and newly defined result codes for an application.</t>
 		<t>GAP 5: Easily parsed enumerations that cover all use cases.</t>
 	</list></t>
 	<t>The following formats show an example of how information could be added to an Appendix to 
 	close these gaps.</t>
 	    <t>
	    <figure anchor="fig_4" title="Example Application and Result Code Formats">
            <artwork align="center"><![CDATA[
1: AppFoo ::= <Diameter Application: 10415 101010>
2:	Command1-Name-Request	C1R
3: 	Command1-Name-Answer	C1A
4: 	
5: Result-Codes ::= <Diameter Result-Codes: 101010>
6: 	NEW_RESULT	(4999)
7:  IMPORTED_RESULT IMPORT (4010)
              	]]></artwork>
          <postamble></postamble>
       </figure>
 	 </t> 	
 	 <t>GAP 1 is closed in line 1.  GAP 3 is closed in lines 1 through 3 while GAP 4
 	 is closed by lines 5 through 7.</t>
 	 <t>GAP 2 can be closed by using a common discernable Table Name format, e.g. AppFoo defined
 	 AVPs.  In this case the Application Name can be looked up and associated to teh defined AVP table.</t>
   	 <t>Gap 5 can be partially closed by following a pattern similar to Result-Codes but this does not resolve all
   	 uses cases.</t>
  	    <t>
	    <figure anchor="fig_5" title="Example Enumeration AVP">
            <artwork align="center"><![CDATA[
Result-Codes ::= <Diameter Enumeration: 123, 45678>
  Label_1	(0)
  LABEL_Two (2)
              	]]></artwork>
          <postamble></postamble>
       </figure>
 	 </t> 	  	 
 	 <t>Further work is required to comprehensively cover all Enumeration Use Cases.</t>
  </section>
</section>
<section anchor="IANA" title="IANA Considerations">
</section>
   <section anchor="Security" title="Security Considerations">
<t>
   This document is informational and provides some guidance on issues
   related to formatting and possible extensions of the Diameter CCF
   to improve understanding and code generation capabilities.  It has no
   impact to the Security of Diameter or Diameter applications.
</t>
   </section>
 </middle>
 <back>
   <references title="Normative References">
     &RFC2119;
     &RFC6733;
   </references>
   <references title="Informative References">
     &RFC7222;
   </references>
 </back>
</rfc>
